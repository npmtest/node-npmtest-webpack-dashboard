{"/home/travis/build/npmtest/node-npmtest-webpack-dashboard/test.js":"/* istanbul instrument in package npmtest_webpack_dashboard */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-webpack-dashboard/lib.npmtest_webpack_dashboard.js":"/* istanbul instrument in package npmtest_webpack_dashboard */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_webpack_dashboard = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_webpack_dashboard = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-webpack-dashboard/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-webpack-dashboard && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_webpack_dashboard */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_webpack_dashboard\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_webpack_dashboard.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        local.assetsDict['/assets.npmtest_webpack_dashboard.rollup.js'] =\n            local.assetsDict['/assets.npmtest_webpack_dashboard.rollup.js'] ||\n            local.fs.readFileSync(\n                // buildCustomOrg-hack\n                local.npmtest_webpack_dashboard.__dirname +\n                    '/lib.npmtest_webpack_dashboard.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-webpack-dashboard/node_modules/webpack-dashboard/index.js":"var dashboard = require('./dashboard/index.js');\n\nmodule.exports = dashboard;","/home/travis/build/npmtest/node-npmtest-webpack-dashboard/node_modules/webpack-dashboard/dashboard/index.js":"/* eslint-disable */\n\"use strict\";\n\nvar blessed = require(\"blessed\");\n\nvar formatOutput = require(\"../utils/format-output.js\");\nvar formatModules = require(\"../utils/format-modules.js\");\nvar formatAssets = require(\"../utils/format-assets.js\");\n\nfunction Dashboard(options) {\n  var title = options && options.title || \"webpack-dashboard\";\n\n  this.color = options && options.color || \"green\";\n  this.minimal = options && options.minimal || false;\n  this.setData = this.setData.bind(this);\n\n  this.screen = blessed.screen({\n    smartCSR: true,\n    title: title,\n    dockBorders: false,\n    fullUnicode: true,\n    autoPadding: true\n  });\n\n  this.layoutLog.call(this);\n  this.layoutStatus.call(this);\n  !this.minimal && this.layoutModules.call(this);\n  !this.minimal && this.layoutAssets.call(this);\n\n  this.screen.key([\"escape\", \"q\", \"C-c\"], function() {\n    process.exit(0);\n  });\n\n  this.screen.render();\n}\n\nDashboard.prototype.setData = function(dataArr) {\n  var self = this;\n\n  dataArr.forEach(function(data) {\n    switch (data.type) {\n      case \"progress\": {\n        var percent = parseInt(data.value * 100);\n        if (self.minimal) {\n          percent && self.progress.setContent(percent.toString() + \"%\");\n        } else {\n          percent && self.progressbar.setContent(percent.toString() + \"%\");\n          self.progressbar.setProgress(percent);\n        }\n        break;\n      }\n      case \"operations\": {\n        self.operations.setContent(data.value);\n        break;\n      }\n      case \"status\": {\n        var content;\n\n        switch(data.value) {\n          case \"Success\":\n            content = \"{green-fg}{bold}\" + data.value + \"{/}\";\n            break;\n          case \"Failed\":\n            content = \"{red-fg}{bold}\" + data.value + \"{/}\";\n            break;\n          default:\n            content = \"{bold}\" + data.value + \"{/}\";\n        }\n        self.status.setContent(content);\n        break;\n      }\n      case \"stats\": {\n        var stats = {\n          hasErrors: function() {\n            return data.value.errors;\n          },\n          hasWarnings: function() {\n            return data.value.warnings;\n          },\n          toJson: function() {\n            return data.value.data;\n          }\n        };\n        if (stats.hasErrors()) {\n          self.status.setContent(\"{red-fg}{bold}Failed{/}\");\n        }\n        self.logText.log(formatOutput(stats));\n        !self.minimal && self.moduleTable.setData(formatModules(stats));\n        !self.minimal && self.assetTable.setData(formatAssets(stats));\n        break;\n      }\n      case \"log\": {\n        var filteredValue = data.value.replace(/[{}]/g, \"\");\n        self.logText.log(filteredValue);\n        break;\n      }\n      case \"clear\": {\n        self.logText.setContent(\"\");\n        break;\n      }\n    }\n  });\n\n  this.screen.render();\n};\n\nDashboard.prototype.layoutLog = function() {\n  this.log = blessed.box({\n    label: \"Log\",\n    padding: 1,\n    width: this.minimal ? \"100%\" : \"75%\",\n    height: this.minimal ? \"70%\" : \"42%\",\n    left: \"0%\",\n    top: \"0%\",\n    border: {\n      type: \"line\",\n    },\n    style: {\n      fg: -1,\n      border: {\n        fg: this.color,\n      },\n    },\n  });\n\n  this.logText = blessed.log({\n    parent: this.log,\n    tags: true,\n    width: \"100%-5\",\n    scrollable: true,\n    input: true,\n    alwaysScroll: true,\n    scrollbar: {\n      ch: \" \",\n      inverse: true\n    },\n    keys: true,\n    vi: true,\n    mouse: true\n  });\n\n  this.screen.append(this.log);\n};\n\nDashboard.prototype.layoutModules = function() {\n  this.modules = blessed.box({\n    label: \"Modules\",\n    tags: true,\n    padding: 1,\n    width: \"50%\",\n    height: \"58%\",\n    left: \"0%\",\n    top: \"42%\",\n    border: {\n      type: \"line\",\n    },\n    style: {\n      fg: -1,\n      border: {\n        fg: this.color,\n      },\n    },\n  });\n\n  this.moduleTable = blessed.table({\n    parent: this.modules,\n    height: \"100%\",\n    width: \"100%-5\",\n    align: \"left\",\n    pad: 1,\n    shrink: true,\n    scrollable: true,\n    alwaysScroll: true,\n    scrollbar: {\n      ch: \" \",\n      inverse: true\n    },\n    keys: true,\n    vi: true,\n    mouse: true,\n    data: [[\"Name\", \"Size\", \"Percentage\"]]\n  });\n\n  this.screen.append(this.modules);\n};\n\nDashboard.prototype.layoutAssets = function() {\n  this.assets = blessed.box({\n    label: \"Assets\",\n    tags: true,\n    padding: 1,\n    width: \"50%\",\n    height: \"58%\",\n    left: \"50%\",\n    top: \"42%\",\n    border: {\n      type: \"line\",\n    },\n    style: {\n      fg: -1,\n      border: {\n        fg: this.color,\n      },\n    },\n  });\n\n  this.assetTable = blessed.table({\n    parent: this.assets,\n    height: \"100%\",\n    width: \"100%-5\",\n    align: \"left\",\n    pad: 1,\n    scrollable: true,\n    alwaysScroll: true,\n    scrollbar: {\n      ch: \" \",\n      inverse: true\n    },\n    keys: true,\n    vi: true,\n    mouse: true,\n    data: [[\"Name\", \"Size\"]]\n  });\n\n  this.screen.append(this.assets);\n};\n\nDashboard.prototype.layoutStatus = function() {\n\n  this.wrapper = blessed.layout({\n    width: this.minimal ? \"100%\" : \"25%\",\n    height: this.minimal ? \"30%\" : \"42%\",\n    top: this.minimal ? \"70%\" : \"0%\",\n    left: this.minimal ? \"0%\" : \"75%\",\n    layout: \"grid\"\n  });\n\n  this.status = blessed.box({\n    parent: this.wrapper,\n    label: \"Status\",\n    tags: true,\n    padding: {\n      left: 1,\n    },\n    width: this.minimal ? \"34%\" : \"100%\",\n    height: this.minimal ? \"100%\" : \"34%\",\n    valign: \"middle\",\n    border: {\n      type: \"line\",\n    },\n    style: {\n      fg: -1,\n      border: {\n        fg: this.color,\n      },\n    },\n  });\n\n  this.operations = blessed.box({\n    parent: this.wrapper,\n    label: \"Operation\",\n    tags: true,\n    padding: {\n      left: 1,\n    },\n    width: this.minimal ? \"34%\" : \"100%\",\n    height: this.minimal ? \"100%\" : \"34%\",\n    valign: \"middle\",\n    border: {\n      type: \"line\",\n    },\n    style: {\n      fg: -1,\n      border: {\n        fg: this.color,\n      },\n    },\n  });\n\n  this.progress = blessed.box({\n    parent: this.wrapper,\n    label: \"Progress\",\n    tags: true,\n    padding: this.minimal ? {\n      left: 1,\n    } : 1,\n    width: this.minimal ? \"33%\" : \"100%\",\n    height: this.minimal ? \"100%\" : \"34%\",\n    valign: \"middle\",\n    border: {\n      type: \"line\",\n    },\n    style: {\n      fg: -1,\n      border: {\n        fg: this.color,\n      },\n    },\n  });\n\n  this.progressbar = blessed.ProgressBar({\n    parent: this.progress,\n    height: 1,\n    width: \"90%\",\n    top: \"center\",\n    left: \"center\",\n    hidden: this.minimal,\n    orientation: \"horizontal\",\n    style: {\n      bar: {\n        bg: this.color,\n      },\n    }\n  });\n\n  this.screen.append(this.wrapper);\n};\n\nmodule.exports = Dashboard;\n","/home/travis/build/npmtest/node-npmtest-webpack-dashboard/node_modules/webpack-dashboard/utils/format-output.js":"/* eslint-disable */\n\"use strict\";\n\nvar friendlySyntaxErrorLabel = 'Syntax error:';\n\nfunction isLikelyASyntaxError(message) {\n  return message.indexOf(friendlySyntaxErrorLabel) !== -1;\n}\n\nfunction formatMessage(message) {\n  return message\n    .replace(\n      'Module build failed: SyntaxError:',\n      friendlySyntaxErrorLabel\n    )\n    .replace(\n      /Module not found: Error: Cannot resolve 'file' or 'directory'/,\n      'Module not found:'\n    )\n    .replace(/^\\s*at\\s.*:\\d+:\\d+[\\s\\)]*\\n/gm, '')\n    .replace('./~/css-loader!./~/postcss-loader!', '');\n}\n\nfunction lineJoin(arr) {\n  var joined = arr.join('\\n');\n  return joined;\n};\n\nfunction formatOutput(stats) {\n  var output = [];\n  var hasErrors = stats.hasErrors();\n  var hasWarnings = stats.hasWarnings();\n  if (!hasErrors && !hasWarnings) {\n    output.push('{green-fg}Compiled successfully!{/}');\n    output.push('');\n\n    return lineJoin(output);\n  }\n\n  var json = stats.toJson();\n  var formattedErrors = json.errors.map(function(message) {\n    return 'Error in ' + formatMessage(message);\n  });\n  var formattedWarnings = json.warnings.map(function(message) {\n    return 'Warning in ' + formatMessage(message);\n  });\n\n  if (hasErrors) {\n    output.push('{red-fg}Failed to compile.{/}');\n    output.push('');\n    if (formattedErrors.some(isLikelyASyntaxError)) {\n      formattedErrors = formattedErrors.filter(isLikelyASyntaxError);\n    }\n    formattedErrors.forEach(function(message) {\n      output.push(message);\n      output.push('');\n    });\n    return lineJoin(output);\n  }\n\n  if (hasWarnings) {\n    output.push('{yellow-fg}Compiled with warnings.{/yellow-fg}');\n    output.push('');\n    formattedWarnings.forEach(function(message) {\n      output.push(message);\n      output.push('');\n    });\n\n    return lineJoin(output);\n  }\n};\n\nmodule.exports = formatOutput;\n","/home/travis/build/npmtest/node-npmtest-webpack-dashboard/node_modules/webpack-dashboard/utils/format-modules.js":"\"use strict\";\n\nvar filesize = require('filesize');\nvar path = require('path');\n\nfunction getPosition(string, needle, i) {\n  return string.split(needle, i).join(needle).length;\n}\n\nfunction modulePath(identifier) {\n  var loaderRegex = /.*!/;\n  return identifier.replace(loaderRegex, '');\n}\n\nfunction moduleDirPath(modulePath) {\n  var moduleDirRegex = new RegExp('(.*?node_modules\\\\' + path.sep + '.*?)\\\\' + path.sep);\n  return modulePath.match(moduleDirRegex)[1];\n}\n\nfunction formatModules(stats) {\n  var json = stats.toJson();\n  var trees;\n  if (!json.hasOwnProperty('modules')) {\n    trees = json.children.map(bundleSizeTree);\n  } else {\n    trees = [bundleSizeTree(json)];\n  }\n  return printTrees(trees);\n}\n\nfunction printTrees(trees) {\n  var output = [\n    ['Name', 'Size', 'Percentage']\n  ];\n  trees.forEach(function(tree) {\n    printDependencySizeTree(tree, 0, function(data) {\n      output.push(data);\n    });\n  });\n  return output;\n}\n\nfunction printDependencySizeTree(node, depth, outputFn) {\n  var childrenBySize = node.children.sort(function(a, b) {\n    return b.size - a.size;\n  });\n\n  var totalSize = node.size;\n  var remainder = totalSize;\n  var includedCount = 0;\n\n  var prefix = '';\n  for (var i=0; i < depth; i++) {\n    prefix += '  ';\n  }\n\n  for (var child of childrenBySize) {\n    ++includedCount;\n    var percentage = ((child.size/totalSize) * 100).toPrecision(3);\n    outputFn([prefix + child.packageName + \"@\" + child.packageVersion, prefix + filesize(child.size), prefix + percentage + \"%\"]);\n\n    printDependencySizeTree(child, depth + 1, outputFn);\n\n    remainder -= child.size;\n\n    if (remainder < 0.01 * totalSize) {\n      break;\n    }\n  }\n\n  if (depth === 0 || remainder !== totalSize) {\n    var percentage = ((remainder/totalSize) * 100).toPrecision(3);\n    outputFn([prefix + \"<self>\", prefix + filesize(remainder), prefix + percentage + \"%\"]);\n  }\n}\n\nfunction bundleSizeTree(stats) {\n  var statsTree = {\n    packageName: '<root>',\n    packageVersion: '',\n    size: 0,\n    children: []\n  };\n\n  if (stats.name) {\n    statsTree.bundleName = stats.name;\n  }\n\n  var modules = stats.modules.map(function(mod) {\n    return {\n      path: modulePath(mod.identifier),\n      size: mod.size\n    };\n  });\n\n  modules.sort(function(a, b) {\n    if (a === b) {\n      return 0;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  });\n\n  modules.forEach(function(mod) {\n    var packages = mod.path.split(new RegExp('\\\\' + path.sep + 'node_modules\\\\' + path.sep));\n    var filename = '';\n    if (packages.length > 1) {\n      var lastSegment = packages.pop();\n\n      var lastPackageName = ''\n      if (lastSegment.indexOf('@')) {\n        lastPackageName = lastSegment.slice(0, lastSegment.search(new RegExp('\\\\' + path.sep + '|$')));\n      } else {\n        lastPackageName = lastSegment.slice(0, getPosition(lastSegment, path.sep, 2));\n      }\n\n      packages.push(lastPackageName);\n      filename = lastSegment.slice(lastPackageName.length + 1);\n    } else {\n      filename = packages[0];\n    }\n    packages.shift();\n\n    var parent = statsTree;\n    parent.size += mod.size;\n    packages.forEach(function(pkg) {\n      var existing = parent.children.filter(function(child) {\n        return child.packageName === pkg\n      });\n      var packageVersion = '';\n      if (existing.length > 0) {\n        existing[0].size += mod.size;\n        parent = existing[0];\n      } else {\n        try {\n          packageVersion = require(path.join(moduleDirPath(mod.path), 'package.json')).version;\n        } catch (err) {\n          packageVersion = ''\n        }\n        var newChild = {\n          packageName: pkg,\n          packageVersion: packageVersion,\n          size: mod.size,\n          children: []\n        };\n        parent.children.push(newChild);\n        parent = newChild;\n      }\n    });\n  });\n\n  return statsTree;\n}\n\nmodule.exports = formatModules;\n","/home/travis/build/npmtest/node-npmtest-webpack-dashboard/node_modules/webpack-dashboard/utils/format-assets.js":"\"use strict\";\n\nvar filesize = require('filesize');\n\nfunction formatAssets(stats) {\n  var json = stats.toJson();\n  var tree;\n  if (!json.hasOwnProperty('assets')) {\n    tree = json.children.map(getAssets);\n  } else {\n    tree = [getAssets(json)];\n  }\n  return printAssets(tree);\n}\n\nfunction getAssets(stats) {\n  return stats.assets;\n}\n\nfunction printAssets(tree) {\n  var total = 0;\n  var output = [\n    ['Name', 'Size']\n  ];\n  tree.forEach(function(assets) {\n    assets.forEach(function(asset) {\n      if ( asset.name.indexOf('hot-update') < 0 ) {\n        total += asset.size;\n        output.push([asset.name, filesize(asset.size)]);\n      }\n    });\n  });\n\n  output.push(['Total', filesize(total)]);\n\n  return output;\n}\n\nmodule.exports = formatAssets;\n"}